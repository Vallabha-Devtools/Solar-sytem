name: unit testing for the solar system project

on:  
  push:

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:   
  build:
    strategy:
      matrix:
        node-version: [18,20]
        os: [ubuntu-latest, windows-latest]
        exclude:
          - node-version: 18
            os: windows-latest
        include:
          - node-version: 18
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4.2.2
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashfiles('package-lock.json') }}

      - name: Install dependencies
        run: npm install
        
      - name: Run unit tests
        run: npm test

  code-coverage:
    container: 
      image: node:18
    runs-on: ubuntu-latest
    steps:
      - name: Run code coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test-Results
          path: Test-Results.xml
  
  docker:
    name: Containerization
    needs: [build, code-coverage]
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DH_USERNAME }}
          password: ${{ secrets.DH_PASSWORD }}

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: |
            ${{ vars.DH_USERNAME }}/solar-system:${{ github.sha }}

      - name: Test Docker image
        run: |
          docker images
          docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{ vars.DH_USERNAME }}/solar-system:${{ github.sha }}
          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo "Container IP: $IP"

          echo "Testing image using wget"
          wget -qO- 127.0.0.1:3000/live | grep live

      - name: Push image to container registries
        if: always()
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ vars.DH_USERNAME }}/solar-system:${{ github.sha }}
            ghcr.io/vallabha-devtools/solar-system:${{ github.sha }}  # ensure lowercase here

# Optional deployment job (currently commented)
# dev-deploy:
#   needs: [build, code-coverage]
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout the repository
#       uses: actions/checkout@v4.2.2
#     
#     - name: Install kubectl
#       uses: azure/setup-kubectl@v3
#       with: 
#         version: 'v1.26.0'
